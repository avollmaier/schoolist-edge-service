server:
  port: 9000
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

springdoc:
  api-docs:
    path: /api/docs
  swagger-ui:
    path: /api/docs/ui
    urls:
      - name: Course Service
        url: /aggregate/course-service/v3/api-docs


spring:
  session:
    redis:
      namespace: schoolist:edge

  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 2000 # 2s
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
        - SaveSession
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      routes:
        - id: spa-route
          uri: ${SPA_URL:http://localhost:3000}
          predicates:
            - Path=/, /dashboard,/favicon.ico, /_next/**
        - id: course-service
          uri: ${COURSE_SERVICE_URL:http://localhost:9001}/courses
          predicates:
            - Path=/courses/**
        - id: course-service-docs
          uri: ${COURSE_SERVICE_URL:http://localhost:9001}
          filters:
            - SetPath=/api-docs
          predicates:
            - Path=/aggregate/course-service/v3/api-docs
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${spring.application.name}
            client-secret: ${AUTH_CLIENT_SECRET:schoolist-keycloak-secret}
            scope: openid, profile, email, roles
        provider:
          keycloak:
            issuer-uri: ${AUTH_ISSUER_URI:http://localhost:8080/auth/realms/schoolist}

  data:
    redis:
      connect-timeout: 2s
      timeout: 2s
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      username: ${REDIS_USERNAME:redis}
      password: ${REDIS_PASSWORD:redis}

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

info:
  system: schoolist

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
      group:
        readiness:
          include: readinessState,redis
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  observations:
    key-values:
      application: ${spring.application.name}